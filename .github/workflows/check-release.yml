name: Check for New Release and Update Dockerfile

on:
  # schedule:
  #   - cron: '0 * * * *' # Execute every hour
  workflow_dispatch:
  push:
    branches:
      - EC-340-action-update-dockerfile

jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout
    
      - name: Get latest release from another repo
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: 'actions',
              repo: 'runner'
            });
            const releaseInfo = {
              tag_name: latestRelease.data.tag_name,
              sha: latestRelease.data.target_commitish,
            };
            console.log(JSON.stringify(releaseInfo));
            return JSON.stringify(releaseInfo);
            
      - name: Debug latest release
        id: debug
        run: |
          release_info="${{ steps.get_release.outputs.result }}"
          echo "Release info: $release_info"
  
          tag_name=$(echo "$release_info" | jq -r '.tag_name')
          sha=$(echo "$release_info" | jq -r '.sha')
  
          echo "Tag name: $tag_name"
          echo "SHA: $sha"

          echo "tag_name=$tag_name" >> "$GITHUB_OUTPUT"
          echo "sha=$sha" >> "$GITHUB_OUTPUT"

      - name: Get changelog file
        id: changelog
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "Changelog file does not exist. Creating one..."
            touch CHANGELOG.md
          fi

      - name: Update Changelog
        id: update_changelog
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const changelogPath = 'CHANGELOG.md';
            const latestRelease = {
              tag_name: "${{ steps.debug.outputs.tag_name }}"
              sha: "${{ steps.debug.outputs.sha }}"
            };
            const dockerImage = `docker pull ghcr.io/actions/runner:${latestRelease.tag_name}@sha256:${latestRelease.sha}`;
  
            const changelogEntry = `## ${latestRelease.tag_name}\n- Docker Image: \`${dockerImage}\`\n`;
  
            const changelogContent = fs.readFileSync(changelogPath, 'utf8');
            fs.writeFileSync(changelogPath, `${changelogEntry}\n${changelogContent}`);